assume cs:code 

data segment
			
	;years
	db  '1975','1976','1987','1978','1979','1980','1981'
	
	db  '1982','1983','1984','1985','1986','1987','1988'
			
	db  '1989','1990','1991','1992','1993','1994','1995'			
			   
	;total income
	dd  16,22,382,1356,2390,8000,16000
			
	dd  24486,50065,97479,140417,197514,345980,590827
			
	dd  803530,1183000,1843000,2759000,3753000,4649000,5937000
			
	;staff numbers
	dw  3,7,9,13,28,38,130
			
	dw  220,476,778,1001,1442,2258,2793
			
	dw  4037,5635,8226,11542,14430,15257,17800
			
data ends

table segment
		         ;0123456789ABCDEF	
	db 21 dup ('year summ ne ?? ')
		
table ends

stack segment

	db 21*16 dup (0)

stack ends

code segment 
start:  mov ax,stack
	mov ss,ax
	mov sp,21*16
	
	mov ax,data 
	mov ds,ax		    ;ds:[si+idata] is where years
	mov si,0		    ;and total income come from
	mov bx,21*2*4		    ;ds:[bx] is where staff number comes from
	
	mov ax,table
	mov es,ax
	mov di,0		    ;data is sent to es:[si+idata]

	mov cx,21
s:	push ds:[si+0]
	pop es:[di+0]
	push ds:[si+2]
	pop es:[di+2]

	push ds:[si+84]
	pop es:[di+5]
	push ds:[si+86]
	pop es:[di+7]

	mov dx,es:[di+7]
	mov ax,es:[di+5]

	push ds:[bx]
	pop es:[di+0AH]

	div word ptr es:[di+0AH]
	mov es:[di+0Dh],ax

	add di,16
	add si,4
	add bx,2
	loop s
	
	mov ax,4C00H
	int 21H
code ends
end start

